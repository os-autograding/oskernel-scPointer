initSidebarItems({"constant":[["SIG_DFL","SigAction::handler 的特殊取值，表示默认处理函数"],["SIG_IGN","SigAction::handler 的特殊取值，表示忽略这个信号"]],"enum":[["SigActionDefault","没有处理函数时的默认行为。 参见 `https://venam.nixers.net/blog/unix/2016/10/21/unix-signals.html`"],["SignalNo","信号编号。"]],"fn":[["get_signals_from_tid","获取信号量。这个函数会复制一个 Arc，不会影响表中的信号本身"],["global_logoff_signals","所有线程退出时均需要从表中删除"],["global_register_signals","所有线程初始化时均需要加入表"],["send_signal","发送一个信号给进程 tid"]],"mod":[["bitset","字符数组。可取并集和差集，也可对给定的 mask 取首位"],["long_bitset","可以存超过 64bit 的扩展版 bitset"],["shadow_bitset","在某个地址上直接构造特定长度的 LongBitset"],["sig_action","信号处理函数"],["sig_info","触发信号时的信息。当 SigAction 指定需要信息时，需要将其返回给用户"],["signal_no","信号的编号"],["tid2signals","一张全局的表，从 tid 映射到对应的 signals 数组"],["ucontext","触发信号时的额外用户信息。当 SigAction 指定需要信息时，需要将其返回给用户"]],"struct":[["Bitset","bit数组"],["LongBitset",""],["ShadowBitset","把某个地址直接认为是一个 LongBitset。 内部不检查地址的合法性，需要调用者保证"],["SigAction","和信号处理函数相关的信息定义"],["SigActionFlags","信号处理指定参数，详见 `https://man7.org/linux/man-pages/man2/rt_sigaction.2.html`"],["SigInfo","错误信息"],["SignalHandlers","处理信号的结构，每个线程有一个，根据 clone 的参数有可能是共享的"],["SignalReceivers","接受信号的结构，每个线程都独有，不会共享"],["SignalUserContext",""]]});