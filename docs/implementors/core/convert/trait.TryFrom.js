(function() {var implementors = {};
implementors["maturin"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"maturin/file/epoll/flags/enum.EpollCtl.html\" title=\"enum maturin::file::epoll::flags::EpollCtl\">EpollCtl</a>","synthetic":false,"types":["maturin::file::epoll::flags::EpollCtl"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; for <a class=\"enum\" href=\"maturin/file/socket/enum.Domain.html\" title=\"enum maturin::file::socket::Domain\">Domain</a>","synthetic":false,"types":["maturin::file::socket::Domain"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; for <a class=\"enum\" href=\"maturin/file/socket/enum.SocketType.html\" title=\"enum maturin::file::socket::SocketType\">SocketType</a>","synthetic":false,"types":["maturin::file::socket::SocketType"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>, &amp;'_ mut TicketMutexGuard&lt;'_, <a class=\"struct\" href=\"maturin/memory/vmm/struct.MemorySet.html\" title=\"struct maturin::memory::vmm::MemorySet\">MemorySet</a>&gt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"maturin/memory/user/user_ptr/struct.UserPtr.html\" title=\"struct maturin::memory::user::user_ptr::UserPtr\">UserPtr</a>&lt;T&gt;","synthetic":false,"types":["maturin::memory::user::user_ptr::UserPtr"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"maturin/signal/signal_no/enum.SignalNo.html\" title=\"enum maturin::signal::signal_no::SignalNo\">SignalNo</a>","synthetic":false,"types":["maturin::signal::signal_no::SignalNo"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; for <a class=\"enum\" href=\"maturin/syscall/flags/enum.Fcntl64Cmd.html\" title=\"enum maturin::syscall::flags::Fcntl64Cmd\">Fcntl64Cmd</a>","synthetic":false,"types":["maturin::syscall::flags::Fcntl64Cmd"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; for <a class=\"enum\" href=\"maturin/syscall/syscall_no/enum.SyscallNo.html\" title=\"enum maturin::syscall::syscall_no::SyscallNo\">SyscallNo</a>","synthetic":false,"types":["maturin::syscall::syscall_no::SyscallNo"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"maturin/task/time_stat/enum.TimerType.html\" title=\"enum maturin::task::time_stat::TimerType\">TimerType</a>","synthetic":false,"types":["maturin::task::time_stat::TimerType"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()